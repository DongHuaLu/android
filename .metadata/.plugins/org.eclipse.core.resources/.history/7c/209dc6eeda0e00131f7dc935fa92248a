import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class Demo {

	/**
	 * @param args
	 */
	public static int threadCount = 3;

	public static void main(String[] args) {
		// 1.连接服务器,获取文件长度,在本地创建一个大小一样的空文件
		String path = "http://10.200.0.157:8080/1.exe";
		try {
			URL url = new URL(path);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setReadTimeout(5000);
			conn.setRequestMethod("GET");
			int code = conn.getResponseCode();
			if (code == 200) {
				// 服务器返回的数据的长度,其实就是文件的长度
				int length = conn.getContentLength();
				System.out.println("文件长度:" + length);
				// 假设三个线程
				// 平均每个线程下载文件的大小
				int blockSize = length / threadCount;

				for (int threadId = 1; threadId <= threadCount; threadId++) {
					int startIndex = (threadId - 1) * blockSize;
					int endIndex = (threadId) * blockSize - 1;
					if (threadId == threadCount) {
						endIndex = length;
					}
					System.out.println("线程" + threadId + "下载:" + startIndex
							+ "------>" + endIndex);
				}
			} else {
				System.out.println("服务器错误");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	public class DownloadThread extends Thread{
		
		private int threadId;
		private int startIndex;
		private int endIndex;
		private String path;

		@Override
		public void run() {
		}
		
		
	}
}
